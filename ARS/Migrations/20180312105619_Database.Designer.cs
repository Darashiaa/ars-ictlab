// <auto-generated />
using ARS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ARS.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20180312105619_Database")]
    partial class Database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("ARS.Models.Classroom", b =>
                {
                    b.Property<long>("classroomid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description");

                    b.Property<DateTime>("endtime");

                    b.Property<bool>("isdisabled");

                    b.Property<int>("locationid");

                    b.Property<string>("name");

                    b.Property<DateTime>("starttime");

                    b.HasKey("classroomid");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("ARS.Models.Location", b =>
                {
                    b.Property<long>("locationid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description");

                    b.Property<string>("name");

                    b.HasKey("locationid");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("ARS.Models.Problem", b =>
                {
                    b.Property<long>("problemid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.HasKey("problemid");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("ARS.Models.Reservation", b =>
                {
                    b.Property<long>("reservationid")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("classroomid");

                    b.Property<DateTime>("date");

                    b.Property<DateTime>("endtime");

                    b.Property<DateTime>("starttime");

                    b.Property<int>("userid");

                    b.Property<long?>("userid1");

                    b.HasKey("reservationid");

                    b.HasIndex("userid1");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ARS.Models.Role", b =>
                {
                    b.Property<long>("roleid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.HasKey("roleid");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ARS.Models.Ticket", b =>
                {
                    b.Property<long>("ticketid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("date");

                    b.Property<string>("description");

                    b.Property<string>("image");

                    b.HasKey("ticketid");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("ARS.Models.User", b =>
                {
                    b.Property<long>("userid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("firstname");

                    b.Property<string>("lastname");

                    b.Property<string>("password");

                    b.Property<int>("roleid");

                    b.Property<string>("username");

                    b.HasKey("userid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ARS.Models.Reservation", b =>
                {
                    b.HasOne("ARS.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userid1");
                });
#pragma warning restore 612, 618
        }
    }
}
